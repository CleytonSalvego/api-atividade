// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220330122529_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Models.AtividadeModel", b =>
                {
                    b.Property<long>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("codigo");

                    b.Property<long?>("UsuarioModelcodigo")
                        .HasColumnType("bigint");

                    b.Property<long>("codigo_criador")
                        .HasColumnType("BIGINT")
                        .HasColumnName("codigo_criador");

                    b.Property<int>("codigo_status")
                        .HasColumnType("int")
                        .HasColumnName("codigo_status");

                    b.Property<DateTime?>("data_alteracao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("data_criacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2022, 3, 30, 9, 25, 29, 395, DateTimeKind.Local).AddTicks(9512))
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("data_planejamento")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_planejamento");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descricao");

                    b.Property<long>("numero_documento")
                        .HasColumnType("BIGINT")
                        .HasColumnName("numero_documento");

                    b.Property<string>("solicitante")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("solicitante");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("titulo");

                    b.HasKey("codigo");

                    b.HasIndex("UsuarioModelcodigo");

                    b.HasIndex("codigo_criador");

                    b.HasIndex("codigo_status");

                    b.ToTable("tb_cad_atividade", (string)null);
                });

            modelBuilder.Entity("api.Models.PerfilModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("descricao");

                    b.HasKey("codigo");

                    b.ToTable("tb_stc_perfil", (string)null);
                });

            modelBuilder.Entity("api.Models.StatusModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("ativo")
                        .HasColumnType("BIT")
                        .HasColumnName("ativo");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("descricao");

                    b.HasKey("codigo");

                    b.ToTable("tb_stc_status", (string)null);
                });

            modelBuilder.Entity("api.Models.UsuarioModel", b =>
                {
                    b.Property<long>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<ulong>("ativo")
                        .HasColumnType("BIT")
                        .HasColumnName("ativo");

                    b.Property<int>("codigo_perfil")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_perfil");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("nome");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("senha");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("usuario");

                    b.HasKey("codigo");

                    b.HasIndex("codigo_perfil");

                    b.HasIndex(new[] { "usuario" }, "IX_usuario")
                        .IsUnique();

                    b.ToTable("tb_cad_usuario", (string)null);
                });

            modelBuilder.Entity("api.Models.AtividadeModel", b =>
                {
                    b.HasOne("api.Models.UsuarioModel", null)
                        .WithMany("atividade")
                        .HasForeignKey("UsuarioModelcodigo");

                    b.HasOne("api.Models.UsuarioModel", "criador")
                        .WithMany("criador")
                        .HasForeignKey("codigo_criador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Atividade_Criador");

                    b.HasOne("api.Models.StatusModel", "status")
                        .WithMany("atividade")
                        .HasForeignKey("codigo_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Atividade_Status");

                    b.Navigation("criador");

                    b.Navigation("status");
                });

            modelBuilder.Entity("api.Models.UsuarioModel", b =>
                {
                    b.HasOne("api.Models.PerfilModel", "perfil")
                        .WithMany("usuario")
                        .HasForeignKey("codigo_perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Perfil_Usuario");

                    b.Navigation("perfil");
                });

            modelBuilder.Entity("api.Models.PerfilModel", b =>
                {
                    b.Navigation("usuario");
                });

            modelBuilder.Entity("api.Models.StatusModel", b =>
                {
                    b.Navigation("atividade");
                });

            modelBuilder.Entity("api.Models.UsuarioModel", b =>
                {
                    b.Navigation("atividade");

                    b.Navigation("criador");
                });
#pragma warning restore 612, 618
        }
    }
}
